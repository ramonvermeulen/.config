set number                        " line numbers

set hlsearch                      " highlight search occurrences
set ignorecase                    " ignore case in search patterns
set smartcase                     " no ignore case when pattern is uppercase
set incsearch                     " show search results while typing
set wrapscan                      " searches wrap around the end of the file

set gdefault                      " substitute all occurrences in line per default
set history=10000                 " keep x lines of command line history
set scrolloff=10 sidescrolloff=10  " keep some lines before and after the cursor visible
set clipboard=unnamedplus,unnamed,ideaput " integrate with system clipboard


" https://github.com/JetBrains/ideavim/wiki/%22set%22-commands
set multiple-cursors
set commentary
set surround                      " emulate vim-surround plugin
set ideajoin
set ideastatusicon=disabled

" set <leader> to <space>
let mapleader = " "

" make Y behave like D and C, yanking till end of line
map Y y$

""""""""""""""""""""""""""""""""""""""""""""""""""""
" IDEA specific
nmap <leader>? :action GotoAction<CR>

" change font size
nmap + :action EditorIncreaseFontSize<CR>
nmap - :action EditorDecreaseFontSize<CR>
nmap <leader>= :action EditorResetFontSize<CR>

" code navigation
nnoremap <c-o> :action Back<cr>
nnoremap <c-i> :action Forward<cr>

nmap <leader>e :action GotoFile<CR>
nmap <leader>a :action FindInPath<CR>
nmap gr :action ShowUsages<CR>
nmap gi :action GotoImplementation<CR>
nmap gs :action GotoSuperMethod<CR>

nmap <leader>l :action NextTab<CR>
nmap <leader>L :action PreviousTab<CR>

nmap <C-p> :action ParameterInfo<CR>
imap <C-p> <C-o>:action ParameterInfo<CR>
nmap <leader>n :action GotoNextError<CR>
map gh <Action>(ShowErrorDescription)

nmap <leader>ri :action Inline<CR>
nmap <leader>rr :action RenameElement<CR>
nmap <leader>rev :action IntroduceVariable<CR>
vmap <leader>rev :action IntroduceVariable<CR>
nmap <leader>rem :action ExtractMethod<CR>
vmap <leader>rem :action ExtractMethod<CR>
nmap <leader>rm :action Move<CR>
nmap <leader>ro :action OptimizeImports<CR>
nmap <leader>rG :action Generate<CR>
nmap <leader>f  :action ReformatCode<CR>
" requires the fuzzier Jetbrains plugin
map <Leader>ff <action>(com.mituuz.fuzzier.FuzzierVCS)
map <Leader>fg <action>(com.mituuz.fuzzier.FuzzyGrep)
" requires the flash Jetbrains plugin
map s <Action>(flash.search)

" requires the IJHarpoon Jetbrains plugin
nmap <leader><C-1> :action SetHarpoon1<cr>
nmap <leader><C-2> :action SetHarpoon2<cr>
nmap <leader><C-3> :action SetHarpoon3<cr>
nmap <leader><C-4> :action SetHarpoon4<cr>
nmap <leader><C-5> :action SetHarpoon5<cr>
nmap <leader><C-6> :action SetHarpoon6<cr>
nmap <leader><C-7> :action SetHarpoon7<cr>
nmap <leader><C-8> :action SetHarpoon8<cr>
nmap <leader><C-9> :action SetHarpoon9<cr>

nmap <leader>1 :action GotoHarpoon1<cr>
nmap <leader>2 :action GotoHarpoon2<cr>
nmap <leader>3 :action GotoHarpoon3<cr>
nmap <leader>4 :action GotoHarpoon4<cr>
nmap <leader>5 :action GotoHarpoon5<cr>
nmap <leader>6 :action GotoHarpoon6<cr>
nmap <leader>7 :action GotoHarpoon7<cr>
nmap <leader>8 :action GotoHarpoon8<cr>
nmap <leader>9 :action GotoHarpoon9<cr>

nmap <leader>h :action ShowHarpoon<cr>
nmap <leader><C-h> :action AddToHarpoon<cr>

" quickly focus terminal, hide with shift + esc (caps)
nmap <leader>t :action ActivateTerminalToolWindow<CR>

nnoremap <Esc> :noh<CR>
nnoremap <leader>r cgn

" Settings -> 
" Left margin in distraction free mode = 0
" Also CTRL + Esc is nice for "Terminal > Switch focus to editor"
"
nnoremap <C-z> :action ToggleDistractionFreeMode<CR>

